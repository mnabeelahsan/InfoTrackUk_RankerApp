//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfoTrackUkApp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class InfoTrackSEOAppEntities : DbContext
    {
        public InfoTrackSEOAppEntities()
            : base("name=InfoTrackSEOAppEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SearchResult> SearchResults { get; set; }
    
        public virtual int AddSearchResults(string searchEngineName, string keywordToSearch, string url, string ranks)
        {
            var searchEngineNameParameter = searchEngineName != null ?
                new ObjectParameter("SearchEngineName", searchEngineName) :
                new ObjectParameter("SearchEngineName", typeof(string));
    
            var keywordToSearchParameter = keywordToSearch != null ?
                new ObjectParameter("KeywordToSearch", keywordToSearch) :
                new ObjectParameter("KeywordToSearch", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var ranksParameter = ranks != null ?
                new ObjectParameter("Ranks", ranks) :
                new ObjectParameter("Ranks", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSearchResults", searchEngineNameParameter, keywordToSearchParameter, urlParameter, ranksParameter);
        }
    
        public virtual ObjectResult<GetAllSearchResults_Result> GetAllSearchResults()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSearchResults_Result>("GetAllSearchResults");
        }
    }
}
